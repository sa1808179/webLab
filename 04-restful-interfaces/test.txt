âœ… Step-by-Step: How to Run & Test Your API with Postman

ðŸŸ¢ 1. Start Your App
Make sure your app is running on your local machine:

npm run dev
Check that it's accessible in the browser:

http://localhost:3000
Or whatever port youâ€™ve set (e.g., http://localhost:3002).

ðŸŸ  2. Open Postman
Download and install Postman: https://www.postman.com/downloads
Open the app.
ðŸŸ£ 3. Test GET /api â€” Fetch All Decks
Click New > HTTP Request.
Set method to GET.
Enter URL:
http://localhost:3000/api
Click Send.
âœ… You should see a list of decks.

ðŸ”µ 4. Test POST /api â€” Create a New Deck
Set method to POST.
URL:
http://localhost:3000/api
Go to the Body tab â†’ choose raw â†’ select JSON.
Paste this:
{
  "title": "Web Dev Deck"
}
Click Send.
âœ… Should return the created deck with 201 Created.

ðŸ”´ 5. Test GET /api/:deckId â€” Get Slides in Deck
Use a valid deckId from previous response.
Set method to GET.
URL:
http://localhost:3000/api/deck1
Or replace with your actual ID.
âœ… Should return slides in the deck.

ðŸŸ¤ 6. Test POST /api/:deckId â€” Add a Slide to a Deck
Set method to POST.
URL:
http://localhost:3000/api/deck1
Body â†’ JSON:
{
  "title": "Intro Slide"
}
Click Send.
âœ… Should return the new slide.

ðŸŸ¡ 7. Test DELETE /api/:deckId â€” Delete Deck (if empty)
Set method to DELETE.
URL:
http://localhost:3000/api/deck1
Click Send.
âœ… Should succeed if deck has no slides.

ðŸ§ª 8. Test All Routes
Repeat steps for:

/api/:deckId/:slideId
/api/:deckId/:slideId/:cardId
Refer to your route structure and implement tests for:

GET, POST, PATCH, and DELETE for cards and slides.
ðŸ“¤ 9. Export the Postman Collection
Click on your Collection name in the sidebar.
Click ... > Export.
Choose version 2.1.
Save it as postman.json.
Put it inside your project folder: results/postman.json.
ðŸ“¸ 10. Take Screenshots for Submission
Capture screenshots of:

All successful test responses.
Each method tested.
Save them in a folder like results/screenshots.

