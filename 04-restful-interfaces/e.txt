🟢 1. Initialize a Next.js App (if not already)
If you're starting fresh:

npx create-next-app@latest my-app
cd my-app


If you already have a project, just go to the root folder:

cd /path/to/your/project


🟠 2. Install Prisma and SQLite
npm install prisma --save-dev
npm install @prisma/client


🟣 3. Initialize Prisma
npx prisma init
This will create two things:

prisma/schema.prisma ← where you define your DB models.
.env ← where the database connection URL lives.



🔵 4. Set up SQLite in .env
Open your .env file and update the database URL:

DATABASE_URL="file:./dev.db"
🟡 5. Define Models in schema.prisma
Example from your case:

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Deck {
  id     String  @id @default(cuid())
  title  String
  slides Slide[]
}

model Slide {
  id     String  @id @default(cuid())
  title  String
  deck   String
  deckRef Deck   @relation(fields: [deck], references: [id], onDelete: Cascade)
  cards  Card[]
}

model Card {
  id     String  @id @default(cuid())
  type   String
  tags   Json
  data   Json
  slide  String
  slideRef Slide @relation(fields: [slide], references: [id], onDelete: Cascade)
}

model CardType {
  type String @id
}
🔴 6. Run Migration (Create DB + Tables)
npx prisma migrate dev --name init
This will:

Create the database (dev.db)
Apply the schema
Generate the Prisma Client
🟤 7. Seed the Database (Optional for CardType)
Create prisma/seed.mjs with:
import { PrismaClient } from '@prisma/client';
const prisma = new PrismaClient();

await prisma.cardType.createMany({
  data: [
    { type: 'string' },
    { type: 'number' },
    { type: 'foreign word' },
    { type: 'image' },
    { type: 'list' }
  ]
});
Run the seed script:
node prisma/seed.mjs
🟩 8. Generate Prisma Client (if not done already)
npx prisma generate
✅ You must do this every time you change schema.prisma!

🟪 9. Open Prisma Studio (optional GUI)
npx prisma studio
This opens a browser to interact with your database visually.

✅ 10. Start Your App
npm run dev




app/ or pages/	Client-side pages and layout
app/page.tsx or pages/index.js	Home page (client-rendered)
public/	Static assets like images
components/	Reusable React components
app/api/ or pages/api/	API routes (server side)






To create and run the client side of your Next.js + Prisma app, you typically don’t need many special commands. The client side (React pages/components) runs with the same development server as your backend API routes. However, here’s a clear step-by-step command list to make sure everything is set up properly:

✅ 1. Navigate to your project
cd /path/to/your/project
✅ 2. Install all required packages
If you haven’t already:

npm install
This installs:

next
react
react-dom
@prisma/client
All other dependencies from package.json
✅ 3. Generate Prisma client
Only needed if you’ve just modified the schema.prisma or installed Prisma:

npx prisma generate
✅ 4. Start your local development server
npm run dev
This runs your full Next.js app, which includes:

The client side: pages and UI under app/ or pages/
The server side: API routes under app/api/ or pages/api/
Your app will usually be available at:

http://localhost:3000
Or whatever port you’ve set.

✅ 5. (Optional) Open Prisma Studio
To view and interact with the database visually:

npx prisma studio
✅ 6. (Optional) Run the seed script
If you want to populate your database with test data:

node prisma/seed.mjs


